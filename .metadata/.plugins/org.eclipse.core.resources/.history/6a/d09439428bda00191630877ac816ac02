package servicios;

import java.sql.SQLException;

import dao.ClienteDAO;
import dao.ClienteDAOImpl;
import entidades.Cliente;
import excepciones.ExistingUserException;
import excepciones.NonExistingUserException;

public class ClienteServiceImpl implements ClienteService {

	private ClienteDAO clienteDAO = new ClienteDAOImpl();

	@Override
	public Cliente selectCliente(String nroDocumento) throws SQLException, NonExistingUserException {
		if (clienteDAO.selectCliente(nroDocumento) != null) { // VER BIEN QUE DEVUELVE CUANDO NO EXISTE
			return clienteDAO.selectCliente(nroDocumento);
		} else {
			throw new NonExistingUserException();
		}
	}

	@Override
	public void insertCliente(Cliente cliente) throws SQLException, ExistingUserException {
		if (clienteDAO.buscarCliente(cliente.getNumeroDocumento())) {
			throw new ExistingUserException();
		} else {
			clienteDAO.insertCliente(cliente);
		}
	}

	@Override
	public void updateCliente(Cliente cliente) throws SQLException, NonExistingUserException {
		if (cliente.getNumeroDocumento().equals(selectCliente(cliente.getNumeroDocumento()).getNumeroDocumento())) {
			clienteDAO.updateCliente(cliente);
		} else {
			throw new NonExistingUserException();
		}
	}

	@Override
	public void deleteCliente(String nroDocumento) throws SQLException, NonExistingUserException {
		if (nroDocumento.equals(selectCliente(nroDocumento).getNumeroDocumento())) {
			clienteDAO.deleteCliente(nroDocumento);
		} else {
			throw new NonExistingUserException();
		}
	}
}